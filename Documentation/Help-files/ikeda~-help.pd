#N canvas 549 38 563 683 10;
#X obj 227 196 hsl 128 15 44.1 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Ikeda 0 28 2 18 #e0e0e0 #000000 0;
#X obj 74 40 cnv 4 4 4 empty empty map 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 114 40 cnv 4 4 4 empty empty chaotic 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 657 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 3 413 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 479 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 572 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 82 487 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 83 423 cnv 17 3 48 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 149 580 1) float;
#X obj 224 220 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 3 3 cnv 15 301 42 empty empty ikeda~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 175 40 cnv 4 4 4 empty empty generator 0 28 2 18 #e0e0e0 #000000 0;
#X text 283 220 rate in Hz;
#X text 84 162 The output rate of the equation is given in hertz (default: nyquist).;
#X text 149 597 2) float;
#X text 149 614 3) float;
#X text 149 632 4) float;
#X text 209 580 - sets frequency in hertz (default: nyquist);
#X obj 224 323 hip~ 5;
#X obj 311 324 hip~ 5;
#X text 64 326 It generates DC Offset;
#X text 70 342 so it needs filtering;
#X text 202 324 =>;
#X text 209 614 - sets initial value of y1[n-1] (default: 0);
#X text 209 632 - sets initial value of y2[n-1] (default: 0);
#X text 209 597 - sets initial "u" parameter (default: 0.75);
#X obj 82 509 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 84 90 [ikeda~] is an ikeda map chaotic generator \, it had two audio outputs generated by the difference equations \; y1[n] = 1 + u * (y1[n-1] * cos(t) - y2[n-1] * sin(t)) \; y2[n] = u * (y1[n-1] * sin(t) + y2[n-1] * cos(t)) \; where t = 0.4 - 6 / (1 + y1[n-1]ˆ2 + y2[n-1]ˆ2;
#X text 222 489 - y1[n]: ikeda map chaotic signal 1st output;
#X text 222 511 - y2[n]: ikeda map chaotic signal 2nd output;
#X obj 224 297 else/ikeda~;
#X obj 224 352 else/out~;
#X msg 265 246 coeffs 0.75 0 0;
#X msg 271 268 coeffs 0.6 0.1 0.7;
#X text 133 439 coeffs <list>;
#X text 222 440 - up to 3 floats set 'u' \, y[n-1] and y[n-2];
#X text 127 424 list/signal(s);
#X text 222 424 - frequency in hertz (negative values accepted);
#X text 91 455 set <float \, float> -;
#X text 218 455 <channel \, freq> set a single frequency channel;
#X text 368 245 (default);
#X text 391 268 u \, y[n-1] and y[n-2];
#N canvas 725 264 549 379 multichannel 0;
#X obj 249 295 else/out~;
#X floatatom 249 113 5 0 0 0 - - - 12;
#X msg 262 144 400 600;
#X msg 275 174 400 600 700;
#X msg 292 217 set 1 555;
#X text 362 210 the set message sets a single frequency channel, f 24;
#X text 33 14 If there's a multichannel input \, each represents a frequency and the object outputs the same number of channels. You can initialize it with the -mc flag (you can't set coeffs then) for multichannel output \, in which case you give it a list of frequencies. A list input also works if no signal is connected to set it to multichannel with a list of frequency input. The set message sets the frequency for one of the channels., f 76;
#X obj 50 168 else/ikeda~;
#X obj 50 199 else/pick~ 1;
#X obj 50 220 hip~ 5;
#X obj 137 224 hip~ 5;
#X obj 50 253 else/out~;
#X obj 137 193 else/pick~ 2;
#X obj 50 139 sig~ 333 444;
#X obj 249 264 else/ikeda~ -mc 440 660;
#X connect 1 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 14 0;
#X connect 4 0 14 0;
#X connect 7 0 8 0;
#X connect 7 1 12 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 10 0 11 1;
#X connect 12 0 10 0;
#X connect 13 0 7 0;
#X connect 14 0 0 0;
#X restore 427 370 pd multichannel;
#X text 157 488 signal(s);
#X text 157 510 signal(s);
#X text 94 548 -mc <list>: sets multichannel output with a list of frequencies, f 63;
#X obj 4 539 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X connect 0 0 17 0;
#X connect 17 0 39 0;
#X connect 27 0 40 0;
#X connect 28 0 40 1;
#X connect 39 0 27 0;
#X connect 39 1 28 0;
#X connect 41 0 39 0;
#X connect 42 0 39 0;
