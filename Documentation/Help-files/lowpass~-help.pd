#N canvas 531 45 563 614 10;
#X obj 4 281 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 456 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 537 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 584 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 109 465 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 109 289 cnv 17 3 115 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 185 217 else/out~;
#X obj 2 3 cnv 15 301 42 empty empty lowpass~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Lowpass 0 28 2 18 #e0e0e0 #000000 0;
#X obj 167 40 cnv 4 4 4 empty empty filter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 97 40 cnv 4 4 4 empty empty resonant 0 28 2 18 #e0e0e0 #000000 0;
#X obj 195 155 noise~;
#X obj 249 140 nbx 5 14 100 10000 1 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 314 164 nbx 5 14 0.1 100 1 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 230 465 - filtered signal;
#X obj 109 409 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 109 432 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 187 332 clear;
#X msg 118 150 bypass \$1;
#X text 133 347 bypass <float>;
#X text 230 347 - 1 (bypasses input signal) or 0 (doesn't bypass);
#N canvas 292 124 926 617 filter 0;
#X obj 696 114 hsl 128 15 0.001 100 1 0 empty \$0-Q-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 631 88 hsl 128 15 20 20000 1 0 empty \$0-Hz-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 564 124 noise~;
#X obj 564 199 else/out~;
#X obj 693 138 nbx 5 14 0.001 100 0 0 \$0-Q empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 628 115 nbx 5 14 20 20000 0 0 \$0-Hz empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 648 88 center frequency;
#X text 717 114 resonance (Q);
#X text 53 13 This filter has zeroes fixes at +1 and -1 on the z-plane \, which means both 0Hz and Nyquist are always filtered out.;
#X text 509 31 Change the parameters and check the filter response below. The graph considers a sample rate of 44.1Khz.;
#X text 80 150 omega = f * PI/nyquist \; alphaQ = sin(omega) / (2*q) \; b0 = alphaQ + 1 \; a0 = (1-cos(omega)) / (2*b0) \; a1 = (1-cos(omega)) / b0 \; a2 = (1-cos(omega)) / (2*b0) \; b1 = 2*cos(omega) / b0 \; b2 = (alphaQ - 1) / b0 \;;
#X text 56 118 a0 \, a1 \, a2 \, b1 and b2 are calculated as a function of center frequency 'f' in hz and 'q' as follows \;;
#X text 732 166 Note: q's and bw's minimum value is 1e-06!, f 21;
#X obj 564 163 else/lowpass~ 1000 0.1;
#X text 54 46 The equation is from the "Cookbook formulae for audio EQ biquad filter coefficients" by Robert Bristow-Johnsonc [1] \, and it is: y[n] = a0 * x[n] + a1 * x[n-2] + a2 * x[n-2] + b1 * y[n-1] + b2 * y[n-2];
#N canvas 169 31 398 275 coeff 0;
#X obj 103 87 r \$0-Hz;
#X obj 173 87 r \$0-Q;
#X obj 87 54 loadbang;
#X obj 87 156 outlet;
#X obj 87 127 else/bicoeff2 lowpass 1000 0.1;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X restore 12 292 pd coeff;
#X obj 12 319 else/biplot;
#X text 97 280 [1] found in https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html, f 80;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 13 0;
#X connect 4 0 13 2;
#X connect 5 0 13 1;
#X connect 13 0 3 0;
#X connect 15 0 16 0;
#X restore 428 213 pd filter formula \; and response;
#X text 136 544 1) float - central frequency in Hertz (default 0);
#X msg 185 122 clear;
#X text 230 332 - clears filter's memory if you blow it up;
#X text 373 163 resonance (Q by default);
#X text 205 376 bw;
#X text 230 376 - sets resonance parameter to bandwidth in octaves;
#X text 211 362 q;
#X obj 3 491 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 148 498 -bw;
#X text 178 498 - sets resonance parameter to bandwidth in octaves, f 51;
#N canvas 604 125 703 364 resonance 0;
#X text 27 95 Alternatively \, you can switch from 'q' to 'bw' with the message methods., f 56;
#X obj 87 273 else/out~;
#X text 27 23 By default \, the resonance parameter is the filter 'q' \, but you can also set it to 'bw' or 't60'. The 'bw' means resonance as bandwidth in octaves and you can set it with the -bw flag or 'bw' message \, whereas 't60' means decay time in 't60' (time it takes for the signal to resonate and decay 60db in ms)., f 56;
#X obj 444 270 else/out~;
#X msg 470 196 q;
#X text 498 197 resonance as 'q' (default);
#X msg 459 173 t60;
#X text 487 173 decay time in ms;
#X obj 444 141 else/imp~ 1;
#X obj 87 194 noise~;
#X obj 87 233 else/lowpass~ -bw 500 0.25;
#X obj 444 230 else/lowpass~ -t60 500 500;
#X text 27 131 Here we have the resonance as bandwidth in octaves. The value is 0.25 \, so a quarter of an octave \, which is a major third width., f 56;
#X connect 4 0 11 0;
#X connect 6 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 10 0 1 0;
#X connect 11 0 3 0;
#X restore 464 193 pd resonance;
#X text 230 362 - sets resonance parameter to Q (default);
#X text 307 139 resonant/center frequency;
#X obj 185 186 else/lowpass~ 1000 0.1;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 304 3 graph;
#X text 199 390 t60;
#X text 230 390 - sets resonance parameter to 't60';
#X text 142 516 -t60;
#X text 178 516 - sets resonance parameter to 't60', f 51;
#X text 136 562 2) float - resonance in 'Q'm \, 'bw' or 't60' (default 1 \, Q);
#X text 61 86 [lowpass~] is a 2nd order lowpass resonant filter. It has support for multichannel., f 65;
#X text 163 289 signal(s);
#X text 163 465 signal(s);
#X text 230 289 - signal(s) to be filtered;
#X text 163 409 signal(s);
#X text 163 432 signal(s);
#X text 229 408 - cutoff frequency in Hertz;
#X text 230 432 - filter resonance (Q \, bandwidth or t60);
#N canvas 628 213 553 374 multichannel 0;
#X obj 50 234 else/lowpass~;
#X obj 50 147 else/white~ -ch 2;
#X obj 285 83 knob 50 100 10000 1 500 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 100 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 285 140 else/pack2;
#X obj 285 246 else/lowpass~;
#X obj 285 280 else/out.mc~;
#X listbox 285 164 17 0 0 0 - - - 0;
#X obj 342 83 knob 50 100 10000 1 1000 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 100 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 411 83 knob 50 0.5 100 1 10 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0.5 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 411 140 else/pack2;
#X listbox 411 164 17 0 0 0 - - - 0;
#X obj 411 192 else/insert reson, f 11;
#X obj 468 83 knob 50 0.5 100 1 10 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0.5 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 285 192 else/insert freq, f 11;
#X obj 87 183 sig~ 500 1000;
#X obj 125 207 sig~ 50 10;
#X obj 50 285 else/out.mc~;
#X obj 223 149 noise~;
#X text 250 28 The 'freq' and 'reson' messages can be used to set values for one or more channels. The number of values set the number of channels., f 44;
#X text 34 33 The filter outputs the same number of channels as the input with most channels. If other inputs also have more than one channel \, the number channels must match. A single value gets repeated to meet the number of multichannels., f 29;
#X connect 0 0 16 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 6 0 13 0;
#X connect 7 0 3 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 4 0;
#X connect 12 0 9 1;
#X connect 13 0 4 0;
#X connect 14 0 0 1;
#X connect 15 0 0 2;
#X connect 17 0 4 0;
#X restore 446 245 pd multichannel;
#X text 230 303 - cutoff frequency in Hertz for each channel;
#X text 145 317 reson <list>;
#X text 230 317 - filter resonance for each channel;
#X text 151 303 freq <list>;
#X obj 118 122 tgl 21 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#N canvas 438 243 296 273 see 0;
#X text 81 49 see also:;
#X obj 81 71 else/lop2~;
#X obj 81 96 else/bicoeff2;
#X obj 80 123 else/vcf.m~;
#A saved 500 10 0 0 0;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 80 183 else/bob.m~;
#A saved 500 10 0 0 2 3 0;
#A saved;
#A saved;
#A saved;
#A saved;
#X restore 34 233 pd see also;
#X connect 12 0 36 0;
#X connect 13 0 36 1;
#X connect 14 0 36 2;
#X connect 19 0 36 0;
#X connect 24 0 36 0;
#X connect 36 0 6 0;
#X connect 63 0 19 0;
