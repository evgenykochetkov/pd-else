#N canvas 611 84 563 649 10;
#X obj 202 191 hsl 128 15 44.1 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 307 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 306 3 pd;
#X obj 346 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 24 40 cnv 4 4 4 empty empty Cusp 0 28 2 18 #e0e0e0 #000000 0;
#X obj 459 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 113 40 cnv 4 4 4 empty empty chaotic 0 28 2 18 #e0e0e0 #000000 0;
#X obj 4 616 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 397 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 467 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 534 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 476 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 93 407 cnv 17 3 50 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 148 541 1) float;
#X obj 199 215 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 174 40 cnv 4 4 4 empty empty generator 0 28 2 18 #e0e0e0 #000000 0;
#X text 258 215 rate in Hz;
#X obj 199 325 else/out~;
#X text 148 558 2) float;
#X text 148 575 3) float;
#X text 208 541 - sets frequency in hertz (default: nyquist);
#X obj 70 40 cnv 4 4 4 empty empty map 0 28 2 18 #e0e0e0 #000000 0;
#X text 208 592 - sets initial value of y[n-1] (default 0);
#X obj 3 3 cnv 15 301 42 empty empty cusp~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X text 85 90 [cusp~] is a chaotic generator using the difference equation \; y[n] = a - b * sqrt(abs(y[n-1]));
#X text 148 592 4) float;
#X text 208 558 - sets 'a' (default 1);
#X text 222 478 - cusp map chaotic signal;
#N canvas 839 247 549 379 multichannel 0;
#X obj 70 248 else/out.mc~;
#X obj 230 288 else/out~;
#X floatatom 230 106 5 0 0 0 - - - 12;
#X msg 243 137 400 600;
#X msg 256 167 400 600 700;
#X obj 70 158 sig~ 333 444;
#X msg 273 210 set 1 555;
#X text 343 203 the set message sets a single frequency channel, f 24;
#X obj 70 197 else/cusp~;
#X obj 230 257 else/cusp~ -mc 440 660;
#X text 33 14 If there's a multichannel input \, each represents a frequency and the object outputs the same number of channels. You can initialize it with the -mc flag (you can't set coeffs then) for multichannel output \, in which case you give it a list of frequencies. A list input also works if no signal is connected to set it to multichannel with a list of frequency input. The set message sets the frequency for one of the channels., f 76;
#X connect 2 0 9 0;
#X connect 3 0 9 0;
#X connect 4 0 9 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X restore 426 340 pd multichannel;
#X text 94 512 -mc <list>: sets multichannel output with a list of frequencies, f 63;
#X obj 4 503 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 208 575 - sets 'b' (default 1.9);
#X obj 199 300 else/cusp~;
#X text 318 267 (default);
#X msg 227 267 coeffs 1 1.9 0;
#X msg 220 246 coeffs 1.3 1.5 -0.5;
#X text 349 245 a \, b and y[n-1];
#X text 84 136 The output rate of the equation is given in hertz (default: nyquist). The object is based on SuperCollider's "CuspN" UGEN and has support for multichannel.;
#X text 135 424 coeffs <list>;
#X text 224 425 - up to 3 floats set 'a' \, 'b' and y[n-1];
#X text 129 407 list/signal(s);
#X text 110 441 set <float \, float> -;
#X text 237 441 <channel \, freq> set a single frequency channel;
#X text 224 407 - frequency in hertz (negative values accepted);
#X text 158 477 signal(s);
#X connect 0 0 16 0;
#X connect 16 0 35 0;
#X connect 35 0 19 0;
#X connect 37 0 35 0;
#X connect 38 0 35 0;
