#N canvas 507 54 561 538 10;
#X obj 4 301 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 403 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 461 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 129 412 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 130 309 cnv 17 3 90 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 515 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Receive 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 89 40 cnv 4 4 4 empty empty messages 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 3 cnv 15 301 42 empty empty receiver 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X floatatom 218 270 5 0 0 0 - - - 0;
#X text 176 412 anything;
#X text 194 338 clear;
#X msg 307 213 clear;
#X symbolatom 218 188 8 0 0 0 - - - 0;
#X floatatom 79 210 5 0 0 0 - - - 0;
#X text 231 308 - set receive names;
#X text 231 338 - clears the receive names;
#X obj 142 164 else/initmess symbol \$0-x;
#X obj 218 210 else/dollsym;
#X text 158 308 symbol/list;
#N canvas 889 246 477 346 two-names 0;
#X floatatom 51 129 5 0 0 0 - - - 0;
#X floatatom 161 185 5 0 0 0 - - - 0;
#X floatatom 52 182 5 0 0 0 - - - 0;
#X obj 51 156 s \$0-a;
#X obj 52 209 s \$0-b;
#X floatatom 379 133 5 0 0 0 - - - 0;
#X floatatom 381 186 5 0 0 0 - - - 0;
#X obj 143 87 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 45 26 [receiver] can have up to two receive names. Hence \, it receives data sent for two different addresses. This is useful if you want to send a message to a group of objects and also individually., f 65;
#X obj 379 160 s \$0-a1;
#X obj 381 213 s \$0-a2;
#X floatatom 383 245 5 0 0 0 - - - 0;
#X obj 383 272 s \$0-a3;
#X floatatom 52 238 5 0 0 0 - - - 0;
#X obj 52 265 s \$0-c;
#X floatatom 144 294 5 0 0 0 - - - 0;
#X obj 144 214 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 161 120 else/message list \$0-a1 \$0-a2;
#X obj 144 239 else/message list \$0-a1 \$0-a3;
#X obj 161 155 else/receiver \$0-a \$0-b;
#X obj 144 264 else/receiver \$0-a \$0-c;
#X text 42 92 1st test here:, f 8;
#X text 165 90 <= now change;
#X text 374 98 and test here:, f 8;
#X connect 0 0 3 0;
#X connect 2 0 4 0;
#X connect 5 0 9 0;
#X connect 6 0 10 0;
#X connect 7 0 17 0;
#X connect 7 0 16 0;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 1 0;
#X connect 20 0 15 0;
#X restore 455 231 pd two-names;
#X text 277 187 <= if you type "\$0" \, you need [dollsym];
#X text 200 323 bang;
#X text 231 323 - spits receive names;
#X text 231 412 - any received message (or receive names at bangs);
#X text 178 470 1) float - optional depth value (default 1);
#X text 184 490 1) list - up to two receive receive names;
#N canvas 727 172 478 400 depth 0;
#X floatatom 160 296 5 0 0 0 - - - 0;
#X obj 180 212 else/dollsym 1;
#X obj 160 180 symbol \\\$0-a;
#X obj 160 152 bng 16 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X symbolatom 180 238 10 0 0 0 - - - 0;
#X text 45 20 I'm lazy to create an abstraction and prove this to you \, but trust me \, you can have a depth argument like in [dollsym] to expand dollar signs according to a parent patch. Check the help file of [dollsym] if you're too confused., f 65;
#X text 68 342 This allows you to get from within an abstraction values sent from loading patch.;
#X obj 160 266 else/receiver 1 \\\$0-a;
#X text 45 74 This is possible at load time and also when getting new dollar sign names to expand. It's like using [dollsym] \, but note that you need to escape dollar signs with a backslash in these cases., f 65;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 2 0 7 0;
#X connect 3 0 2 0;
#X connect 7 0 0 0;
#X restore 418 255 pd depth;
#X obj 218 240 else/receiver;
#X obj 79 247 else/sender;
#X text 16 248 see also:;
#X text 63 88 [receiver] is kinda like vanilla's [receive]. It can have up to two names \, has an inlet to set the receive names and at load time can expand dollar symbols according to parent patches. It can also 'learn' from a [sender] object or [knob]., f 75;
#X text 194 353 learn;
#X text 188 383 forget;
#X text 164 368 deactivate;
#X obj 129 436 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 188 436 symbol;
#X text 231 436 - learnt send symbol;
#X text 231 353 - activate 'learn';
#X text 231 368 - deactivate 'learn';
#X text 231 382 - forget and clear the learnt symbol;
#N canvas 727 172 508 331 learn 0;
#X floatatom 234 242 5 0 0 0 - - - 0;
#X msg 234 116 learn;
#X msg 246 146 deactivate;
#X msg 258 176 forget;
#X obj 234 212 else/receiver;
#X obj 309 239 else/display;
#X obj 62 159 else/sender \$0-learn;
#X floatatom 62 127 5 0 0 0 - - - 0;
#X obj 84 194 else/knob 58 0 127 0 0 \$0-knob empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0 empty empty 0 12 0 -15 0 1 0 0 1 0;
#X text 63 27 You can make [receiver] learn from a send activity via [sender] or built-in send name in a [knob] object. The second outlet outputs the learnt symbol so you can store it and save with the patch \, like when using [savestate]., f 65;
#X text 278 116 - activate 'learn';
#X text 318 145 - deactivate 'learn';
#X text 307 176 -;
#X text 321 177 forget and clear the learnt symbol, f 17;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 4 1 5 0;
#X connect 7 0 6 0;
#X restore 478 255 pd learn;
#X connect 21 0 37 0;
#X connect 22 0 27 0;
#X connect 23 0 38 0;
#X connect 26 0 37 0;
#X connect 26 0 38 1;
#X connect 27 0 37 0;
#X connect 27 0 38 1;
#X connect 37 0 18 0;
