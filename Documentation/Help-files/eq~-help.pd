#N canvas 647 38 562 651 10;
#X obj 4 289 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 494 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 558 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 625 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 102 503 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 219 225 else/out~;
#X obj 22 40 cnv 4 4 4 empty empty Parametric 0 28 2 18 #e0e0e0 #000000 0;
#X obj 183 40 cnv 4 4 4 empty empty filter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 231 161 noise~;
#X obj 102 422 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 102 445 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X msg 152 158 bypass \$1;
#X obj 152 130 tgl 21 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#N canvas 354 108 944 587 filter 0;
#X obj 675 111 hsl 128 15 0.1 10 0 0 empty \$0-Q-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 642 62 hsl 128 15 20 20000 1 0 empty \$0-Hz-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 564 107 noise~;
#X obj 606 200 else/out~;
#X obj 672 135 nbx 5 14 1e-06 10 0 0 \$0-Q empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 639 86 nbx 4 14 20 20000 0 0 \$0-Hz empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 517 18 Change the parameters and check the filter response below. The graph considers a sample rate of 44.1Khz.;
#X obj 734 141 hsl 128 15 -24 24 0 0 empty \$0-G-set empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 731 167 nbx 4 14 -24 24 0 0 \$0-G empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 767 141 gain (dB);
#X text 113 21 The equation is from the "Cookbook formulae for audio EQ biquad filter coefficients" by Robert Bristow-Johnsonc [1] \, and it is: y[n] = a0 * x[n] + a1 * x[n-2] + a2 * x[n-2] + b1 * y[n-1] + b2 * y[n-2];
#X text 653 62 center frequency;
#X text 715 111 resonance;
#X text 111 80 a0 \, a1 \, a2 \, b1 and b2 are calculated as a function of frequency 'f' in hz \, 'Q' and 'db' gain as follows \; w = f * PI/nyquist \; G = pow(10 \, db/40) \; alphaQ = sin(w) / (2*Q) \; b0 = alphaQ/G + 1 \; a0 = (1 + alphaQ*G) / b0 \; a1 = a1 = -2*cos(w) / b0 \; a2 = (1 - alphaQ*G) / b0 \; b1 = 2*cos(w) / b0 \; b2 = (alphaQ/G - 1) / b0 \;;
#N canvas 169 31 398 275 coeff 0;
#X obj 103 87 r \$0-Hz;
#X obj 173 87 r \$0-Q;
#X obj 87 54 loadbang;
#X obj 87 156 outlet;
#X obj 87 127 else/bicoeff2 eq 750 1 12;
#X obj 254 89 r \$0-G;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X connect 5 0 4 2;
#X restore 12 251 pd coeff;
#X obj 12 278 else/biplot;
#X text 90 234 [1] found in https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html, f 80;
#X obj 606 167 else/eq~ 750 1 12;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 17 0;
#X connect 4 0 17 2;
#X connect 5 0 17 1;
#X connect 7 0 8 0;
#X connect 8 0 17 3;
#X connect 14 0 15 0;
#X connect 17 0 3 0;
#X restore 429 204 pd filter formula \; and response;
#X msg 219 130 clear;
#X obj 102 468 cnv 17 3 17 empty empty 3 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 223 468 - gain in dB;
#X text 131 599 3) float - gain in dB (default 0), f 53;
#X text 223 445 - filter resonance (Q or bandwidth);
#X text 222 421 - central frequency in Hertz;
#X text 131 564 1) float - central frequency in Hertz (default 0), f 53;
#X text 131 582 2) float - resonance (default 1) \, either in 'Q' (default) or 'bw', f 65;
#X obj 3 530 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 122 536 -bw;
#X text 152 536 - sets resonance parameter to bandwidth in octaves, f 53;
#N canvas 905 73 407 322 resonance 0;
#X text 27 17 By default \, the resonance parameter is the filter 'q' \, but you can also set it as bandwidth in octaves. This is done with the -bw flag.;
#X text 28 62 Alternatively \, you can switch from 'q' to 'bw' with the message methods.;
#X obj 81 224 else/out~;
#X obj 81 129 noise~;
#X msg 147 155 q;
#X msg 135 128 bw;
#X text 175 156 resonance as 'q';
#X text 163 128 resonance as bandwidth in octaves;
#X obj 81 184 else/eq~ -bw 2000 2 24;
#X connect 3 0 8 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 8 0 2 0;
#X restore 464 178 pd resonance;
#X obj 2 3 cnv 15 301 42 empty empty eq~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 109 40 cnv 4 4 4 empty empty equalizer 0 28 2 18 #e0e0e0 #000000 0;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 304 3 graph;
#N canvas 628 213 693 408 multichannel 0;
#X obj 50 147 else/white~ -ch 2;
#X obj 285 83 knob 50 100 10000 1 500 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 100 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 285 140 else/pack2;
#X obj 411 324 else/out.mc~;
#X listbox 285 164 17 0 0 0 - - - 0;
#X obj 342 83 knob 50 100 10000 1 1000 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 100 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 411 83 knob 50 0.5 100 1 10 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0.5 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 411 140 else/pack2;
#X listbox 411 164 17 0 0 0 - - - 0;
#X obj 411 192 else/insert reson;
#X obj 468 83 knob 50 0.5 100 1 10 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0.5 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 285 192 else/insert freq;
#X obj 87 183 sig~ 500 1000;
#X obj 50 315 else/out.mc~;
#X obj 363 222 noise~;
#X text 34 33 The filter outputs the same number of channels as the input with most channels. If other inputs also have more than one channel \, the number channels must match. A single value gets repeated to meet the number of multichannels., f 29;
#X obj 531 83 knob 50 -24 24 0 -12 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 531 140 else/pack2;
#X listbox 531 164 17 0 0 0 - - - 0;
#X obj 531 192 else/insert db;
#X obj 588 83 knob 50 -24 24 0 12 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X text 313 25 The 'freq' \, 'reson' and 'db' messages can be used to set values for one or more channels. The number of values set the number of channels., f 50;
#X obj 124 212 sig~ 5 10;
#X obj 161 240 sig~ -12 24;
#X obj 50 272 else/eq~, f 19;
#X obj 411 290 else/eq~;
#X connect 0 0 24 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 4 0 11 0;
#X connect 5 0 2 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 25 0;
#X connect 10 0 7 1;
#X connect 11 0 25 0;
#X connect 12 0 24 1;
#X connect 14 0 25 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 25 0;
#X connect 20 0 17 1;
#X connect 22 0 24 2;
#X connect 23 0 24 3;
#X connect 24 0 13 0;
#X connect 25 0 3 0;
#X restore 446 241 pd multichannel;
#X obj 219 194 else/eq~ 500 10 24;
#X text 156 468 signal(s);
#X text 156 445 signal(s);
#X text 156 422 signal(s);
#X text 156 503 signal(s);
#X text 223 503 - filtered signal(s);
#X obj 103 300 cnv 17 3 115 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 181 356 clear;
#X text 127 371 bypass <float>;
#X text 224 371 - 1 (bypasses input signal) or 0 (doesn't bypass);
#X text 224 356 - clears filter's memory if you blow it up;
#X text 199 400 bw;
#X text 224 400 - sets resonance parameter to bandwidth in octaves;
#X text 205 386 q;
#X text 224 386 - sets resonance parameter to Q (default);
#X text 157 300 signal(s);
#X text 224 300 - signal(s) to be filtered;
#X text 224 314 - cutoff frequency in Hertz for each channel;
#X text 139 328 reson <list>;
#X text 224 328 - filter resonance for each channel;
#X text 145 314 freq <list>;
#X text 157 342 db <list>;
#X text 224 342 - gain in db for each channel;
#X text 61 86 [eq~] is a 2nd order parametric equalizer filter \, it can be used as a peak and a notch filter. It has support for multichannels., f 67;
#X connect 8 0 38 0;
#X connect 11 0 38 0;
#X connect 12 0 11 0;
#X connect 14 0 38 0;
#X connect 38 0 5 0;
