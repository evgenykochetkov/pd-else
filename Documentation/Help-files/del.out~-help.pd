#N canvas 544 67 565 590 10;
#X obj 4 388 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 424 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 493 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 559 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 104 397 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 466 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 209 398 - signal input into the delay line, f 37;
#X obj 2 3 cnv 15 301 42 empty \$0-cnv2 del.out~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Delay 0 28 2 18 #e0e0e0 #000000 0;
#X obj 77 40 cnv 4 4 4 empty empty line 0 28 2 18 #e0e0e0 #000000 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 116 40 cnv 4 4 4 empty empty output 0 28 2 18 #e0e0e0 #000000 0;
#X text 273 213 The -samps flag sets time value to samples instead of ms (default), f 34;
#X text 94 498 (besides the first optional argument that defines "in" or "out", f 64;
#X text 128 472 -samps;
#X text 170 473 - sets time value to samples (default is ms);
#X obj 102 250 else/out~;
#X obj 105 137 hsl 128 15 0 44100 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 102 158 6 0 0 0 - - - 0;
#X obj 102 181 else/f2s~ 200;
#X text 144 158 delay time (in samples in this case);
#X text 130 398 float/signal;
#X obj 104 435 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 166 436 signal;
#X text 209 436 - output of a delay line, f 37;
#N canvas 788 137 492 462 order 0;
#X obj 102 362 -~;
#X obj 103 162 bng 19 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 103 194 else/ramp~;
#X text 174 403 matches delay in samples;
#X obj 103 136 else/tempo 10000 -ms -on;
#N canvas 707 219 468 219 out 0;
#X obj 129 147 outlet~;
#X obj 94 28 inlet~;
#X obj 129 69 inlet~;
#X text 145 27 dummy intlet to force order of execution;
#X obj 129 110 del.out~ -samps \$0-order;
#X connect 2 0 4 0;
#X connect 4 0 0 0;
#X restore 142 321 pd out;
#X floatatom 175 294 5 0 64 0 - - - 0;
#X text 213 292 delay in samples;
#X obj 102 402 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 142 358 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X text 151 257 <-- dummy outlet forces order of execution;
#X text 188 321 <-- open;
#X obj 142 235 del.in~ -samps \$0-order 64;
#X text 48 16 We can force the order of execution as this example shows. If we don't do this \, it's hard to guarantee we can read from the delay line without having a minimum delay of a block size. This is the same issue with [delwrite~] and [delread~] objects and other objects like [send~]/[receive~]. But the [del.in~] provides another structure as it has a dummy outlet to force the order of execution. This way you only need a subpatch to include [del.out~] objects.;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 2 0 12 0;
#X connect 4 0 1 0;
#X connect 5 0 0 1;
#X connect 5 0 9 0;
#X connect 6 0 5 1;
#X connect 12 0 5 0;
#X restore 435 273 pd order;
#X text 34 537 2) float;
#X text 28 521 1) symbol;
#X text 91 521 - sets delay line name (optional: default internal name relative to patch), f 74;
#X text 77 86 Read from a delay line. It uses a cubic (4 point) interpolation called spline and considers the buffer to be circular (so index 0 to table size is accepted)., f 70;
#X text 91 536 - delay time in ms or samples (default 0);
#X text 244 261 Note that the same "order of execution" issue also applies:, f 30;
#X text 19 339 see also:;
#X obj 171 340 else/ffdelay~;
#X obj 264 340 else/fbdelay~;
#N canvas 776 318 409 283 example 0;
#X obj 119 166 else/out~;
#X obj 118 70 else/player~ bubul.mp3 1 1;
#X obj 137 116 else/del.in~ -samps \$0-y 44100;
#X text 82 31 Write to the delay line of the parent patch.;
#X connect 1 0 0 0;
#X connect 1 0 2 0;
#X restore 441 335 pd example;
#X obj 87 340 else/del.in~;
#X obj 102 219 else/del.out~ -samps \$0-y;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 45 0;
#X connect 45 0 24 0;
