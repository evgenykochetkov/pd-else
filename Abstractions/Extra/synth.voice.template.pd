#N canvas 396 381 785 445 12;
#X obj 131 318 *~;
#X obj 48 229 mtof;
#X obj 131 393 outlet~;
#X obj 82 25 inlet;
#X obj 333 293 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 314 325 switch~;
#X obj 213 65 print other messages;
#X obj 82 65 route list adsr;
#X obj 218 212 unpack f f f f;
#X text 345 209 send release value to parent, f 15;
#X text 486 70 This is a template to build synth abstractions., f 35;
#X obj 48 257 else/bl.saw~;
#X obj 82 180 unpack f f;
#X text 487 274 If you have a polyphonic synth you also want to send the release value to the parent [synth~] abstraction loader \, so the [voices] object also handles the release time for the voice allocation., f 35;
#X text 486 147 You probably need to use an envelope like [adsr~] to handle MIDI velocity and convert MIDI pitch to frequency and feed an oscillator. A [switch~] object is also desired to free the CPU when there's no active voice and [adsr~] can feed it., f 35;
#X text 216 129 get arguments from parent;
#X obj 149 257 else/adsr~ 20 10 0.7 150;
#X text 486 111 Arguments are received via [receiver] from the parent., f 35;
#X obj 218 153 else/receiver 1 \\\$0-args;
#X obj 337 248 sender 1 \\\$0-rel;
#X connect 0 0 2 0;
#X connect 1 0 11 0;
#X connect 3 0 7 0;
#X connect 7 0 12 0;
#X connect 7 1 8 0;
#X connect 7 2 6 0;
#X connect 8 0 16 2;
#X connect 8 1 16 3;
#X connect 8 2 16 4;
#X connect 8 3 16 5;
#X connect 8 3 19 0;
#X connect 11 0 0 0;
#X connect 12 0 1 0;
#X connect 12 1 16 0;
#X connect 16 0 0 1;
#X connect 16 1 4 0;
#X connect 16 1 5 0;
#X connect 18 0 8 0;
