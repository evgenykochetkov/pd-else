#N canvas 375 46 653 689 12;
#X text 419 18 see -->;
#X obj 479 18 about.MERDA;
#X text 437 220 This is a wrapper around [adsr~] from ELSE \, check it out., f 18;
#X obj 423 612 s \$0-rel;
#X obj 130 264 r \$0-rel;
#X text 208 598 The release output value can be used to set the release parameter in [voices~], f 28;
#N canvas 120 107 648 452 messages 0;
#X msg 83 87 A \$1;
#X msg 127 87 D \$1;
#X msg 174 87 S \$1;
#X msg 217 87 R \$1;
#X floatatom 83 57 5 0 2000 0 - - - 0;
#X floatatom 127 57 5 0 2000 0 - - - 0;
#X floatatom 174 57 5 0 1 0 - - - 0;
#X floatatom 217 57 5 0 2000 0 - - - 0;
#X msg 57 283 A_att \$1;
#X msg 131 283 D_att \$1;
#X msg 202 283 S_att \$1;
#X msg 272 283 R_att \$1;
#X obj 405 410 outlet;
#X obj 202 350 s \$0-out;
#X obj 174 163 s \$0-out;
#X obj 405 273 r \$0-out;
#X obj 405 180 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X msg 338 180 gate \$1;
#X obj 338 150 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 366 150 Control gate;
#X text 433 181 Control trigger/retrigger;
#X obj 405 243 s \$0-out;
#X obj 57 243 else/knob 30 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0 0 0;
#X obj 131 243 else/knob 30 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0 0 0;
#X obj 202 243 else/knob 30 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0 0 0;
#X obj 272 243 else/knob 30 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 0 0 0 0 0 0 0 0 0;
#X msg 266 87 curve \$1;
#X floatatom 266 56 5 0 2000 0 - - - 0;
#X obj 431 330 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X msg 431 360 gui \$1;
#X connect 0 0 14 0;
#X connect 1 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 14 0;
#X connect 4 0 0 0;
#X connect 5 0 1 0;
#X connect 6 0 2 0;
#X connect 7 0 3 0;
#X connect 8 0 13 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 15 0 12 0;
#X connect 16 0 21 0;
#X connect 17 0 21 0;
#X connect 18 0 17 0;
#X connect 22 0 8 0;
#X connect 23 0 9 0;
#X connect 24 0 10 0;
#X connect 25 0 11 0;
#X connect 26 0 14 0;
#X connect 27 0 26 0;
#X connect 28 0 29 0;
#X connect 29 0 12 0;
#X restore 180 296 pd messages;
#N canvas 712 173 520 517 retrigger 0;
#X obj 68 74 else/keyboard 17 80 3 3 0 0 empty empty;
#X obj 68 176 else/mono~ 10, f 28;
#X obj 68 398 else/out~;
#X obj 213 232 else/adsr.m~;
#A saved 100 50 0.25 500 1 0 0 0 0 1 0;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X text 75 21 The 2nd inlet is for retriggering with impulses. Here's an example with [mono~]., f 48;
#X obj 68 264 else/vco.m~;
#A saved 0 0 0 3 0.674999 0 0 0 0;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 68 334 else/vca.m~;
#A saved 1 0 0;
#A saved;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 3 0;
#X connect 1 2 3 1;
#X connect 3 0 6 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X restore 490 449 pd retrigger;
#X obj 35 165 else/keyboard 17 80 3 3 0 0 empty empty;
#X obj 506 275 else/adsr~;
#X obj 35 318 else/voices~ 4;
#X obj 35 564 else/out~;
#X obj 27 17 else/note 375 15 Menlo empty 4 0 0 0 0 223 223 223 1 1 í ½í²© [adsr.m~] - Polyphonic ADSR envelope;
#X obj 180 325 else/adsr.m~;
#A saved 10 20 0.5 1000 1 0 0 0 0 1 0;
#A saved attacklearn none;
#A saved decaylearn none;
#A saved sustainlearn none;
#A saved releaselearn none;
#A saved A-att none;
#A saved D-att none;
#A saved S-att none;
#A saved R-att none;
#X text 111 359 push ---> button, f 9;
#X text 433 359 <-- sets curve parameter;
#X text 461 375 (0 is linear);
#X text 28 60 This polyphonic ADSR envelope takes multichannel signals for gate input in the left inlet and retrigger in the 2nd inlet (a bang input in the left inlet also retriggers). The other inlets are audio CV controlls for attack \, decay \, sustain and release that pass through attenuverters and are added to the knob controls. Attack \, decay and release values are in ms \, sustain point is a ratio of the gate input., f 76;
#X obj 35 405 else/vco.m~;
#A saved 0 0 0 3 0.849999 0 0 0 0;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 35 478 else/vca.m~;
#A saved 1 0 0;
#A saved;
#N canvas 760 174 502 539 impulse 0;
#X obj 60 387 else/out~;
#X obj 211 187 else/adsr.m~;
#A saved 200 50 0.5 50 1 0 0 0 0 1 1;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 211 139 else/tempo~ -on 60;
#X obj 60 229 else/vco.m~;
#A saved 0 0 0 3 0.674999 0 0 0 0;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 60 299 else/vca.m~;
#A saved 1 0 0;
#A saved;
#X text 48 39 The "imp" button sets to impulse mode \, where it can be triggered by an impulse. Effectively \, this means that if a gate off is received before the attack+decay stage is finished \, then it waits until it's over before going into the release stage., f 56;
#X connect 1 0 4 1;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X restore 490 417 pd impulse;
#X connect 4 0 10 1;
#X connect 6 0 13 0;
#X connect 8 0 10 0;
#X connect 10 0 18 0;
#X connect 10 1 13 0;
#X connect 13 0 19 1;
#X connect 13 1 3 0;
#X connect 18 0 19 0;
#X connect 19 0 11 0;
